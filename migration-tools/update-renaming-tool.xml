<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.6.2 or above.        -->
<!-- ====================================================================== -->
<project name="Vertigo Update Renaming Tool" default="">
	<!-- =================================================================== -->
	<!-- Proprietes                                                          -->
	<!-- =================================================================== -->
	<property name="src.encoding" value="utf8" />
	<property name="src.path" value="." />

	<target name="4.1.0 to 4.2.0" description="Usefull renames from 4.1.0 to 4.2.0">


		<echo message="Renamed in *.java : io.vertigo.core.util.NamedThreadFactory to io.vertigo.core.lang.NamedThreadFactory" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.util.NamedThreadFactory" value="io.vertigo.core.lang.NamedThreadFactory" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.datamodel.structure.definitions.Formatter to io.vertigo.datamodel.smarttype.definitions.Formatter" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.datamodel.structure.definitions.Formatter" value="io.vertigo.datamodel.smarttype.definitions.Formatter" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.datamodel.structure.definitions.Constraint to io.vertigo.datamodel.smarttype.definitions.Constraint" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.datamodel.structure.definitions.Constraint" value="io.vertigo.datamodel.smarttype.definitions.Constraint" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.datamodel.structure.definitions.DtProperty to io.vertigo.datamodel.smarttype.definitions.DtProperty" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.datamodel.structure.definitions.DtProperty" value="io.vertigo.datamodel.smarttype.definitions.DtProperty" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.datamodel.structure.definitions.Property to io.vertigo.datamodel.smarttype.definitions.Property" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.datamodel.structure.definitions.Property" value="io.vertigo.datamodel.smarttype.definitions.Property" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.datamodel.structure. to io.vertigo.datamodel.data." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.datamodel.structure." value="io.vertigo.datamodel.data." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : DtObjectUtil/DataObjectUtil to DataModelUtil" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="DtObjectUtil" value="DataModelUtil" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : DtField to DataField" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="DtField" value="DataField" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : findDtDefinition to findDataDefinition" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="findDtDefinition" value="findDataDefinition" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : DtDefinition to DataDefinition" />
		<replaceregexp encoding="${src.encoding}" flags="gs" byline="true">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="([\s\.&lt;\(]+)DtDefinition" />
			<substitution expression="\1DataDefinition" />
		</replaceregexp>

		<echo message="Renamed in *.java : DtObject to DataObject" />
		<replaceregexp encoding="${src.encoding}" flags="gs" byline="true">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="([\s\.&lt;\(]+)DtObject(?!Errors)" />
			<substitution expression="\1DataObject" />
		</replaceregexp>

		<echo message="Renamed in *DAO.java : createDtObjectUID(/createDataUID( to createUID(" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="createDtObjectUID(" value="createUID(" summary="true">
			<include name="**/*DAO.java" />
		</replace>

		<echo message="Renamed in *.java : createDtObject(/createData( to createDataObject(" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="createDtObject(" value="createDataObject(" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : getDtDefinition( to getDataDefinition(" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="getDtDefinition(" value="getDataDefinition(" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Rollback in *.java : DataDefinitions to DtDefinitions" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="DataDefinitions" value="DtDefinitions" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Rollback in *.java : DataValidator to DtObjectValidator" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="DataValidator" value="DtObjectValidator" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Rollback in *.java : DataObjectValidator to DtObjectValidator" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="DataObjectValidator" value="DtObjectValidator" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : dtDefinitionA to dataDefinitionA" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="dtDefinitionA" value="dataDefinitionA" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : dtDefinitionB to dataDefinitionB" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="dtDefinitionB" value="dataDefinitionB" summary="true">
			<include name="**/*.java" />
		</replace>
	</target>

	<target name="2.1.0 to 3.0.0" description="Usefull renames from 2.1.0 to 3.0.0">

		<echo message="Renamed in *.java : io.vertigo.app. to io.vertigo.core.node." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.app." value="io.vertigo.core.node." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.core.component. to io.vertigo.core.node.component." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.component." value="io.vertigo.core.node.component." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.lang. to io.vertigo.core.lang." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.lang." value="io.vertigo.core.lang." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.jsp (error page) : io.vertigo.lang. to io.vertigo.core.lang." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.lang." value="io.vertigo.core.lang." summary="true">
			<include name="**/*.jsp" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.util. to io.vertigo.core.util." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.util." value="io.vertigo.core.util." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.core.node.Home to io.vertigo.core.node.Node" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.node.Home" value="io.vertigo.core.node.Node" summary="true">
			<include name="**/*.java" />
		</replace>
		<replace dir="${src.path}" encoding="${src.encoding}" token="Home.getApp()." value="Node.getNode()." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : AutoCloseableApp to AutoCloseableNode" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="AutoCloseableApp" value="AutoCloseableNode" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.yaml : envIndex: to enIndexPrefix:" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="envIndex:" value="enIndexPrefix:" summary="true">
			<include name="**/*.yaml" />
		</replace>

		<echo message="Renamed in *.yaml : - webservices.apiPrefix: to - webservices.javalin:" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="- webservices.apiPrefix:" value="- webservices.javalin:" summary="true">
			<include name="**/*.yaml" />
		</replace>

        <echo message="Renamed in *.ksp : attribute .... inOut:'in' to in ..." />
        <replaceregexp encoding="${src.encoding}" flags="gi" byline="true">
            <fileset dir="${src.path}">
                <include name="**/*.ksp" />
            </fileset>
            <regexp pattern="attribute(\s+.*\s+)inOut\s*:\s*&quot;(in|out)&quot;" />
            <substitution expression="\2\1" />
        </replaceregexp>
		
		<echo message="Renamed in *.ksp : required:&quot;true&quot; to cardinality:&quot;1&quot; or &quot;*&quot;" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
			<fileset dir="${src.path}">
				<include name="**/*.ksp" />
			</fileset>
			<regexp pattern="(domain\s*:\s*Do[a-zA-Z0-9]+)Dtc(.*\s.*)required\s*:\s*&quot;true&quot;" />
			<substitution expression="\1\2cardinality: &quot;*&quot;" />
		</replaceregexp>
	    <replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
            <fileset dir="${src.path}">
                <include name="**/*.ksp" />
            </fileset>
            <regexp pattern="(domain\s*:\s*Do[a-zA-Z0-9]+)Dto(.*\s.*)required\s*:\s*&quot;true&quot;" />
            <substitution expression="\1\2cardinality: &quot;1&quot;" />
        </replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
			<fileset dir="${src.path}">
				<include name="**/*.ksp" />
			</fileset>
			<regexp pattern="(domain\s*:\s*Do[a-zA-Z0-9]+[^D][^t][^c].*\s*)required\s*:\s*&quot;true&quot;" />
			<substitution expression="\1cardinality: &quot;1&quot;" />
		</replaceregexp>
		<echo message="Renamed in *.ksp : required:&quot;false&quot; to cardinality:&quot;?&quot;" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
            <fileset dir="${src.path}">
                <include name="**/*.ksp" />
            </fileset>
            <regexp pattern="(domain\s*:\s*Do[a-zA-Z0-9]+)Dtc(.*\s.*)required\s*:\s*&quot;false&quot;" />
            <substitution expression="\1\2cardinality: &quot;?&quot;" />
        </replaceregexp>
        <replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
            <fileset dir="${src.path}">
                <include name="**/*.ksp" />
            </fileset>
            <regexp pattern="(domain\s*:\s*Do[a-zA-Z0-9]+)Dto(.*\s.*)required\s*:\s*&quot;false&quot;" />
            <substitution expression="\1\2cardinality: &quot;?&quot;" />
        </replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
            <fileset dir="${src.path}">
                <include name="**/*.ksp" />
            </fileset>
            <regexp pattern="(domain\s*:\s*Do[a-zA-Z0-9]+\s.*)required\s*:\s*&quot;false&quot;" />
            <substitution expression="\1cardinality: &quot;?&quot;" />
        </replaceregexp>
        
		<echo message="Renamed in *.java : io.vertigo.dynamo.store.StoreManager to io.vertigo.datastore.entitystore.EntityStoreManager" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamo.store.StoreManager" value="io.vertigo.datastore.entitystore.EntityStoreManager" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.dynamo.store.StoreManager to io.vertigo.datastore.entitystore.EntityStoreManager" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="StoreManager storeManager" value="EntityStoreManager entityStoreManager" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : storeManager.getDataStore(). to entityStoreManager." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="storeManager.getDataStore()." value="entityStoreManager." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : storeManager.getFileStore(). to fileStoreManager." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="storeManager.getFileStore()." value="fileStoreManager." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.dynamo.collections. to io.vertigo.datafactory.collections." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamo.collections." value="io.vertigo.datafactory.collections." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.dynamo.search. to io.vertigo.datafactory.search." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamo.search." value="io.vertigo.datafactory.search." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.dynamo.impl.search. to io.vertigo.datafactory.impl.search." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamo.impl.search." value="io.vertigo.datafactory.impl.search." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : *.search.metamodel to *.search.definitions" />
		<replace dir="${src.path}" encoding="${src.encoding}" token=".search.metamodel." value=".search.definitions." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : *.filestore.metamodel to *.filestore.definitions" />
		<replace dir="${src.path}" encoding="${src.encoding}" token=".filestore.metamodel." value=".filestore.definitions." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : *.structure.metamodel to *.structure.definitions" />
		<replace dir="${src.path}" encoding="${src.encoding}" token=".structure.metamodel." value=".structure.definitions." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : *.task.metamodel to *.task.definitions" />
		<replace dir="${src.path}" encoding="${src.encoding}" token=".task.metamodel." value=".task.definitions." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : *.collections.metamodel to *.collections.definitions" />
		<replace dir="${src.path}" encoding="${src.encoding}" token=".collections.metamodel." value=".collections.definitions." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.commons.command.CommandDefinition to io.vertigo.commons.command.definitions.CommandDefinition" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.commons.command.CommandDefinition" value="io.vertigo.commons.command.definitions.CommandDefinition" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.commons.command.CommandParam to io.vertigo.commons.command.definitions.CommandParam" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.commons.command.CommandParam" value="io.vertigo.commons.command.definitions.CommandParam" summary="true">
			<include name="**/*.java" />
		</replace>


		<echo message="Renamed in *.java : TimeSeriesDataBaseManager to TimeSeriesManager" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="TimeSeriesDataBaseManager" value="TimeSeriesManager" summary="true">
			<include name="**/*.java" />
		</replace>
		<replace dir="${src.path}" encoding="${src.encoding}" token="timeSeriesDataBaseManager" value="timeSeriesManager" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.dynamox.domain.constraint. to io.vertigo.datamodel.impl.smarttype.constraint." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamox.domain.constraint." value="io.vertigo.datamodel.impl.smarttype.constraint." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.dynamox.domain.formatter. to io.vertigo.datamodel.impl.smarttype.formatter." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamox.domain.formatter." value="io.vertigo.datamodel.impl.smarttype.formatter." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.social.services.notification.NotificationServices to io.vertigo.social.notification.NotificationManager" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.social.services.notification.NotificationServices" value="io.vertigo.social.notification.NotificationManager" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.social.services.comment.CommentServices to io.vertigo.social.comment.CommentManager" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.social.services.comment.CommentServices" value="io.vertigo.social.comment.CommentManager" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.social.services.handle.HandleServices to io.vertigo.social.handle.HandleManager" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.social.services.handle.HandleServices" value="io.vertigo.social.handle.HandleManager" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.social.services. to io.vertigo.social." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.social.services." value="io.vertigo.social." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.geo.services.geosearch.GeoSearchServices to io.vertigo.geo.geosearch.GeoSearchManager" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.geo.services.geosearch.GeoSearchServices" value="io.vertigo.geo.geosearch.GeoSearchManager" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.geo.services. to io.vertigo.geo." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.geo.services." value="io.geo.social." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.datamodel.smarttype.ModelDefinitionProvider to io.vertigo.datamodel.impl.smarttype.ModelDefinitionProvider" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.datamodel.smarttype.ModelDefinitionProvider" value="io.vertigo.datamodel.impl.smarttype.ModelDefinitionProvider" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : ModelManager to SmartTypeManager (lower and upper case)" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="ModelManager" value="SmartTypeManager" summary="true">
			<include name="**/*.java" />
		</replace>
		<replace dir="${src.path}" encoding="${src.encoding}" token="modelManager" value="smartTypeManager" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : Assertion.checkArgument( to Assertion.check().isTrue(" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="Assertion.checkArgument(" value="Assertion.check().isTrue(" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : Assertion.checkState( to Assertion.check().isTrue(" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="Assertion.checkState(" value="Assertion.check().isTrue(" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : Assertion.checkNotNull( to Assertion.check().isNotNull(" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="Assertion.checkNotNull(" value="Assertion.check().isNotNull(" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : Assertion.checkArgNotEmpty( to Assertion.check().isNotBlank(" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="Assertion.checkArgNotEmpty(" value="Assertion.check().isNotBlank(" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : StringUtil.isEmpty( to StringUtil.isBlank(" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="StringUtil.isEmpty(" value="StringUtil.isBlank(" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.html : VUi.methods.httpPostAjax to VUiPage.httpPostAjax" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="VUi.methods.httpPostAjax" value="VUiPage.httpPostAjax" summary="true">
			<include name="**/*.html" />
		</replace>

		<echo message="Renamed in web.xml : io.vertigo.vega.plugins.webservice.webserver.sparkjava.VegaSparkFilter to io.vertigo.vega.plugins.webservice.webserver.javalin.VegaJavalinFilter" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.vega.plugins.webservice.webserver.sparkjava.VegaSparkFilter" value="io.vertigo.vega.plugins.webservice.webserver.javalin.VegaJavalinFilter" summary="true">
			<include name="**/web.xml" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.datamodel.impl.smarttype.constraint. to io.vertigo.basics.constraint." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.datamodel.impl.smarttype.constraint." value="io.vertigo.basics.constraint." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.datamodel.impl.smarttype.formatter. to io.vertigo.basics.formatter." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.datamodel.impl.smarttype.formatter." value="io.vertigo.basics.formatter." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.dynamox.task. to io.vertigo.basics.task." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamox.task." value="io.vertigo.basics.task." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.ksp : io.vertigo.dynamox.task. to io.vertigo.basics.task." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamox.task." value="io.vertigo.basics.task." summary="true">
			<include name="**/*.ksp" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.dynamox.search.AbstractSqlSearchLoader to io.vertigo.datafactory.impl.search.loader.AbstractSqlSearchLoader" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamox.search.AbstractSqlSearchLoader" value="io.vertigo.datafactory.impl.search.loader.AbstractSqlSearchLoader" summary="true">
			<include name="**/*.java" />
		</replace>

	</target>

	<target name="1.1.3 to 2.0.0" description="Usefull renames from 1.1.3 to 2.0.0">
		<echo message="Renamed in *.ksp : notNull:&quot; : to required:&quot;" />
        <replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
            <fileset dir="${src.path}">
                <include name="**/*.ksp" />
            </fileset>
            <regexp pattern="(\s+)notNull\s*:\s*&quot;" />
            <substitution expression="\1required:&quot;" />
        </replaceregexp>
		
		<echo message="Renamed in *.ksp : key XXX : to id XXX" />
        <replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
            <fileset dir="${src.path}">
                <include name="**/*.ksp" />
            </fileset>
            <regexp pattern="(\s+)key(\s+[a-zA-Z])" />
            <substitution expression="\1id\2" />
        </replaceregexp>
		
		<echo message="Renamed in *.java : io.vertigo.mail. to io.vertigo.social.mail." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.mail." value="io.vertigo.social.mail." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : StringUtil.constToLowerCamelCase(XxxFields.yyy.name()) to XxxFields.yyy.name()" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="StringUtil\.constToLowerCamelCase\((.+\..+\.name\(\))\)" />
			<substitution expression="\1" />
		</replaceregexp>
	</target>

	<target name="CONST Java Entity to CamelCase java" description="Replace old java definitions to CamelCase definition new in vertigo 2.0">
		<copy todir="${src.path}\generated-java" encoding="${src.encoding}" overwrite="true">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<filterchain>
				<tokenfilter>
					<scriptfilter language="javascript">
                            function upperCamelCase(str) {
                              return str.replace(/((?:\W|^)\w)|_+(\w)|\w/g, function(match, p1, p2, index) {
                               if (p1) { return p1.toUpperCase();} 
                               if (p2) { return p2.toUpperCase();} 
                               return match.toLowerCase();
                              });
                            }
                            function lowerCamelCase(str) {
                              return str.replace(/((?:\W|^)\w)|_+(\w)|\w/g, function(match, p1, p2, index) {
                               if (p1) { return p1.toLowerCase();} 
                               if (p2) { return p2.toUpperCase();} 
                               return match.toLowerCase();
                              });
                            }
                            //replace domain
                            var result = self.getToken().replace(/((?:domain|name|dtDefinitionA|dtDefinitionB|primaryDtDefinitionName|foreignDtDefinitionName) = ")([A-Z0-9_]+)"/g, function(match, p1, p2, index) {
                               return p1+upperCamelCase(p2)+"\"";
                            });
                            //replace in methods
                            result = result.replace(/((?:createDtListURIForNNAssociation|createUID)\(this, ")([A-Z0-9_]+)"/g, function(match, p1, p2, after, index) {
                               return p1+lowerCamelCase(p2)+"\"";
                            });
                            self.setToken(result);
                        </scriptfilter>
				</tokenfilter>
			</filterchain>
		</copy>
	</target>

	<target name="CONST KSP to CamelCase ksp" description="Replace old ksp definitions to CamelCase definition new in vertigo 2.0">
		<copy todir="${src.path}\generated-ksp" encoding="${src.encoding}" overwrite="true">
			<fileset dir="${src.path}">
				<include name="**/*.ksp" />
			</fileset>
			<filterchain>
				<tokenfilter>
					<scriptfilter language="javascript">
                        function upperCamelCase(str) {
                          return str.replace(/((?:\W|^)\w)|_+(\w)|\w/g, function(match, p1, p2, index) {
                           if (p1) { return p1.toUpperCase();} 
                           if (p2) { return p2.toUpperCase();} 
                           return match.toLowerCase();
                          });
                        }
                        function lowerCamelCase(str) {
                          return str.replace(/((?:\W|^)\w)|_+(\w)|\w/g, function(match, p1, p2, index) {
                           if (p1) { return p1.toLowerCase();} 
                           if (p2) { return p2.toUpperCase();} 
                           return match.toLowerCase();
                          });
                        }
                        //replace definitions
                        var result = self.getToken().replace(/(\W|^(?:create|alter)\s+)([A-Z][a-zA-Z]+\s+)([A-Z0-9_]+)(\s*\{)/g, function(match, verb, p1, p2, after, index) {
                           return verb+p1+upperCamelCase(p2)+after;
                        });
                        //replace fields and tasks attributes
                        result = result.replace(/(\W(?:id|field|computed|range|indexCopyTo|attribute)\s+)([A-Z0-9_]+)(\s*\{)/g, function(match, p1, p2, after, index) {
                           return p1+lowerCamelCase(p2)+after;
                        });
                        //replace attributes
                        result = result.replace(/(\W(?:formatter|dtDefinition|keyConcept|dtIndex|domain|domainCriteria|dtDefinitionA|dtDefinitionB))(\s*:\s*)([A-Z0-9_]+\W*)/g, function(match, attr, p1, p2, index) {
                           return attr+p1+upperCamelCase(p2);
                        });
                        //replace lower attributes
                        result = result.replace(/(\W(?:fkFieldName|fieldName|sortField|displayField))(\s*:\s*)([\"A-Z0-9_]+\W*)/g, function(match, attr, p1, p2, index) {
                           return attr+p1+lowerCamelCase(p2);
                        });
                        //replace multiple attributes
                        result = result.replace(/(\W(?:facets|constraint|from))(\s*:\s*)([\[\]\s,A-Z0-9_]+\W*)/g, function(match, attr, p1, p2, index) {
                           return attr+p1+upperCamelCase(p2);
                        });
                        //replace lower request attributes
                        result = result.replace(/\#([A-Z0-9_\.]+)\#/g, function(match, p1, index) {
                            return "#"+lowerCamelCase(p1)+"#";
                        });
                        self.setToken(result);
                    </scriptfilter>
				</tokenfilter>
			</filterchain>
		</copy>
	</target>

	<!-- ====================================================================== -->
	<!-- Replace quarto's ksp definitions by a Java definition provider         -->
	<!-- ====================================================================== -->
	<target name="0.9.3 to 0.9.4 publisher definitions from ksp to Java" description="Replace quarto's ksp definitions by a Java definition provider">
		<copy todir="${src.path}">
			<fileset dir="${src.path}">
				<include name="**/*.ksp" />
				<containsregexp expression="create(\s)*(PublisherNode|PublisherDefinition)" />
			</fileset>
			<globmapper from="*.ksp" to="*.ksp2java" casesensitive="no" />
		</copy>

		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="\n\s*\}\s*\n" />
			<substitution expression=".build();${line.separator}${line.separator}" />
		</replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="\n\s*\}" />
			<substitution expression=".build();${line.separator}${line.separator}}" />
		</replaceregexp>

		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="package\s*([A-Za-z0-9\.]*)\.([A-Za-z0-9]+)" />
			<substitution expression="package \1.\2;
                ${line.separator}import java.util.List;
                ${line.separator}import io.vertigo.core.definition.Definition;
                ${line.separator}import io.vertigo.core.definition.DefinitionSpace;
                ${line.separator}import io.vertigo.core.definition.SimpleDefinitionProvider;
                ${line.separator}import io.vertigo.quarto.services.publisher.metamodel.PublisherDataDefinition;
                ${line.separator}import io.vertigo.quarto.services.publisher.metamodel.PublisherNodeDefinition;
                ${line.separator}import io.vertigo.quarto.services.publisher.metamodel.PublisherNodeDefinitionBuilder;
                ${line.separator}import io.vertigo.util.ListBuilder;
                ${line.separator}
                ${line.separator}public final class \2PublisherDefinitionProvider implements SimpleDefinitionProvider {
                ${line.separator}
                ${line.separator}@Override
                ${line.separator}public List&lt;Definition&gt; provideDefinitions(final DefinitionSpace definitionSpace) {
                ${line.separator}       return new ListBuilder&lt;Definition&gt;()
                ${line.separator}               .add(/*TODO*/)
                ${line.separator}               .build();
                ${line.separator}   } " />
		</replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="create\s*PublisherNode\s*([A-Za-z_0-9]+)\s*\{" />
			<substitution expression="private final PublisherNodeDefinition \1 = new PublisherNodeDefinitionBuilder()" />
		</replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="stringField\s*([A-Za-z_0-9]+)\s*\{\s*\}" />
			<substitution expression=".addStringField(&quot;\1&quot;)" />
		</replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="booleanField\s*([A-Za-z_0-9]+)\s*\{\s*\}" />
			<substitution expression=".addBooleanField(&quot;\1&quot;)" />
		</replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="imageField\s*([A-Za-z_0-9]+)\s*\{\s*\}" />
			<substitution expression=".addImageField(&quot;\1&quot;)" />
		</replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="dataField\s*([A-Za-z_0-9]+)\s*\{\s*type\s*:\s*([A-Za-z_0-9]+)\s*\}" />
			<substitution expression=".addNodeField(&quot;\1&quot;, \2)" />
		</replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="listField\s*([A-Za-z_0-9]+)\s*\{\s*type\s*:\s*([A-Za-z_0-9]+)\s*\}" />
			<substitution expression=".addListField(&quot;\1&quot;, \2)" />
		</replaceregexp>
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp2java" />
			</fileset>
			<regexp pattern="create\s*PublisherDefinition\s*([A-Za-z_0-9]+)\s*\{\s*root\s*:\s*([A-Za-z_0-9]+)(\s)*\}" />
			<substitution expression="private final PublisherDataDefinition \1 = new PublisherDataDefinition(&quot;\1&quot;, \2);" />
		</replaceregexp>
	</target>

	<!-- ====================================================================== -->
	<!-- Generation des classes de tests                                        -->
	<!-- ====================================================================== -->
	<target name="0.9.3 to 0.9.4" description="Usefull renames from 0.9.3 to 0.9.4">

		<echo message="Renamed in *.java : io.vertigo.lang.Describable to io.vertigo.core.component.Describable" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.lang.Describable" value="io.vertigo.core.component.Describable" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.core.spaces.component. to io.vertigo.core.component." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.spaces.component." value="io.vertigo.core.component." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : new WrappedException(.*, e); to WrappedException.wrap(e, msg)" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="new WrappedException\((&quot;.+&quot;), e\);" />
			<substitution expression="WrappedException.wrap(e, \1);" />
		</replaceregexp>

		<echo message="Renamed in *.java : new WrappedException(e); to WrappedException.wrap(e);" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="throw new WrappedException\((.+)\);" />
			<substitution expression="throw WrappedException.wrap\(\1\);" />
		</replaceregexp>

		<echo message="Renamed in *.java : WrappedException.wrapIfNeeded(e); to WrappedException.wrap(e);" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="throw WrappedException.wrapIfNeeded\((.+)\);" />
			<substitution expression="throw WrappedException.wrap\(\1\);" />
		</replaceregexp>

		<echo message="Renamed in *.java : Injector to DIInjector" />
		<replace dir="${src.path}" encoding="${src.encoding}" token=".Injector;" value=".DIInjector;" summary="true">
			<include name="**/*.java" />
		</replace>
		<replace dir="${src.path}" encoding="${src.encoding}" token=" Injector." value=" DIInjector." summary="true">
			<include name="**/*.java" />
		</replace>
		<replace dir="${src.path}" encoding="${src.encoding}" token="\tInjector." value="\tDIInjector." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.core.spaces.definiton. to io.vertigo.core.definition." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.spaces.definiton." value="io.vertigo.core.definition." summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : .getStringValue(&quot;([a-zA-Z0-9\.]+)&quot;); to .getParam(\1).getValueAsString" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="\.getStringValue\(&quot;([a-zA-Z0-9\.]+)&quot;\)" />
			<substitution expression=".getParam(&quot;\1&quot;).getValueAsString()" />
		</replaceregexp>

		<echo message="Renamed in *.java : .getBooleanValue(&quot;([a-zA-Z0-9\.]+)&quot;); to .getParam(\1).getValueAsBoolean" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="\.getBooleanValue\(&quot;([a-zA-Z0-9\.]+)&quot;\)" />
			<substitution expression=".getParam(&quot;\1&quot;).getValueAsBoolean()" />
		</replaceregexp>

		<echo message="Renamed in *.java : .getIntValue(&quot;([a-zA-Z0-9\.]+)&quot;); to .getParam(\1).getValueAsInt" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="\.getIntValue\(&quot;([a-zA-Z0-9\.]+)&quot;\)" />
			<substitution expression=".getParam(&quot;\1&quot;).getValueAsInt()" />
		</replaceregexp>

		<echo message="Renamed in *.java : .getLongValue(&quot;([a-zA-Z0-9\.]+)&quot;); to .getParam(\1).getValueAsLong" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.java" />
			</fileset>
			<regexp pattern="\.getLongValue\(&quot;([a-zA-Z0-9\.]+)&quot;\)" />
			<substitution expression=".getParam(&quot;\1&quot;).getValueAsLong()" />
		</replaceregexp>

		<echo message="Renamed in *.xml : io.vertigo.x.([a-zA-Z]+).account to io.vertigo.x.account.\1" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.xml" />
			</fileset>
			<regexp pattern="io\.vertigo\.x\.([a-zA-Z]+)\.account" />
			<substitution expression="io.vertigo.x.account.\1" />
		</replaceregexp>

		<echo message="Renamed in *.xml : io.vertigo.x.([a-zA-Z]+).audit to io.vertigo.x.audit.\1" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.xml" />
			</fileset>
			<regexp pattern="io\.vertigo\.x\.([a-zA-Z]+)\.audit" />
			<substitution expression="io.vertigo.x.audit.\1" />
		</replaceregexp>

		<echo message="Renamed in *.xml : io.vertigo.x.([a-zA-Z]+).comment to io.vertigo.x.comment.\1" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.xml" />
			</fileset>
			<regexp pattern="io\.vertigo\.x\.([a-zA-Z]+)\.comment" />
			<substitution expression="io.vertigo.x.comment.\1" />
		</replaceregexp>

		<echo message="Renamed in *.xml : io.vertigo.x.([a-zA-Z]+).notification to io.vertigo.x.notification.\1" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.xml" />
			</fileset>
			<regexp pattern="io\.vertigo\.x\.([a-zA-Z]+)\.notification" />
			<substitution expression="io.vertigo.x.notification.\1" />
		</replaceregexp>

		<echo message="Renamed in *.xml : io.vertigo.x.([a-zA-Z]+).rules to io.vertigo.x.rules.\1" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.xml" />
			</fileset>
			<regexp pattern="io\.vertigo\.x\.([a-zA-Z]+)\.rules" />
			<substitution expression="io.vertigo.x.rules.\1" />
		</replaceregexp>


		<echo message="Renamed in *.xml : api=&quot;([a-zA-Z]+)Manager&quot; class=&quot;io.vertigo.x.([a-zA-Z\.]+)Manager to api=&quot;\1Services&quot; class=&quot;io.vertigo.x.\2Services" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.xml" />
			</fileset>
			<regexp pattern="api=&quot;([a-zA-Z]+)Manager&quot; class=&quot;io\.vertigo\.x\.([a-zA-Z\.]+)Manager" />
			<substitution expression="api=&quot;\1Services&quot; class=&quot;io.vertigo.x.\2Services" />
		</replaceregexp>

		<echo message="Renamed in *.xml : api=&quot;WorkflowServices&quot; class=&quot;io.vertigo.x.impl.workflow.WorkflowServices to api=&quot;WorkflowManager&quot; class=&quot;io.vertigo.x.impl.workflow.WorkflowManager" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="api=&quot;WorkflowServices&quot; class=&quot;io.vertigo.x.impl.workflow.WorkflowServices" value="api=&quot;WorkflowManager&quot; class=&quot;io.vertigo.x.impl.workflow.WorkflowManager" summary="true">
			<include name="**/*.xml" />
		</replace>

		<echo message="Renamed in *.xml : io.vertigo.x.account.impl.services.AccountServicesImpl to io.vertigo.x.account.impl.services.AccountServicesImpl" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.x.account.impl.services.AccountServicesImpl" value="io.vertigo.x.account.impl.services.AccountServicesImpl" summary="true">
			<include name="**/*.xml" />
		</replace>
	</target>

	<target name="0.9.2 to 0.9.3" description="Usefull renames from 0.9.2 to 0.9.3">
		<echo message="Renamed in *.java : io.vertigo.lang.Option to java.util.Optional" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.lang.Option" value="java.util.Optional" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : Option&lt; to Optional&lt;" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="Option&lt;" value="Optional&lt;" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : Option. to Optional." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="Option." value="Optional." summary="true">
			<include name="**/*.java" />
		</replace>
		<echo message="Replace in *.ksp persistent: &quot;false&quot;,\n(\t)+key to field" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp" />
			</fileset>
			<regexp pattern="persistent\s*:\s*&quot;false&quot;(,)?\s*\n(\s+)key(\s)" />
			<substitution expression="field\3" />
		</replaceregexp>
		<echo message="Replace in *.ksp persistent: &quot;false&quot;,\n(\t)+field to field" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp" />
			</fileset>
			<regexp pattern="persistent\s*:\s*&quot;false&quot;(,)?\s*\n(\s+)field(\s)" />
			<substitution expression="field\3" />
		</replaceregexp>
		<echo message="Replace in *.ksp persistent: &quot;true&quot;,\n(\t)+key to key" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*.ksp" />
			</fileset>
			<regexp pattern="persistent\s*:\s*&quot;true&quot;(,)?\s*\n(\s+)key(\s)" />
			<substitution expression="key\3" />
		</replaceregexp>
		<echo message="Replace in *.ksp attribute .* domain: DO_.*_DTC notNull:&quot;false&quot; to attribute .* domain: DO_.*_DTC notNull:&quot;true&quot;" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="true">
			<fileset dir="${src.path}">
				<include name="**/*.ksp" />
			</fileset>
			<regexp pattern="(attribute.+DO_[A-Z_]+_DTC\s.+notNull\s*:\s*)&quot;false&quot;" />
			<substitution expression="\1&quot;true&quot;" />
		</replaceregexp>
		<echo message="Replace in *.java &lt;D extends DtObject&gt; URI&lt;D&gt; to &lt;E extends Entity&gt; URI&lt;E&gt;" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="&lt;D extends DtObject&gt; URI&lt;D&gt;" value="&lt;E extends Entity&gt; URI&lt;E&gt;" summary="true">
			<include name="**/*.java" />
		</replace>

		<echo message="Replace in *SearchLoader.java super(taskManager); to super(taskManager, transactionManager);" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*SearchLoader.java" />
			</fileset>
			<regexp pattern="\)\s+\{\s*\n(\s+)super\(taskManager\);" />
			<substitution expression=", final VTransactionManager transactionManager) {${line.separator}\1super(taskManager, transactionManager);" />
		</replaceregexp>

		<echo message="Replace in *SearchLoader.java import io.vertigo.dynamo.task.TaskManager; to import io.vertigo.dynamo.task.TaskManager;\nimport io.vertigo.dynamo.transaction.VTransactionManager;" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="import io.vertigo.dynamo.task.TaskManager;" value="import io.vertigo.dynamo.task.TaskManager;${line.separator}import io.vertigo.dynamo.transaction.VTransactionManager;" summary="true">
			<include name="**/*SearchLoader.java" />
		</replace>

		<echo message="Replace in *SearchLoader.java loadData(final List&lt;URI&lt;?&gt;&gt; to loadData(final SearchChunk&lt;?&gt; searchChunk) { final List&lt;URI&lt;?&gt;&gt; uris = searchChunk.getAllURIs();" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/*SearchLoader.java" />
			</fileset>
			<regexp pattern="loadData\(\n?\s*final\s+List&lt;URI&lt;([A-Za-z0-9]+)&gt;&gt;\s+([A-Za-z0-9]+)\)\s+\{\s+\n(\s+)" />
			<substitution expression="loadData(final SearchChunk&lt;\1&gt; searchChunk) \{${line.separator}\3final List&lt;URI&lt;\1&gt;&gt; \2 = searchChunk.getAllURIs();${line.separator}\3" />
		</replaceregexp>

		<echo message="Replace in *SearchLoader.java import io.vertigo.dynamo.search.metamodel.SearchIndexDefinition; to import io.vertigo.dynamo.search.metamodel.SearchChunk;\\nimport io.vertigo.dynamo.search.metamodel.SearchIndexDefinition;" />
		<replace dir="${src.path}" encoding="${src.encoding}" token="import io.vertigo.dynamo.search.metamodel.SearchIndexDefinition;" value="import io.vertigo.dynamo.search.metamodel.SearchChunk;${line.separator}import io.vertigo.dynamo.search.metamodel.SearchIndexDefinition;" summary="true">
			<include name="**/*SearchLoader.java" />
		</replace>
		<echo message="Replace in *.xml io.vertigo.quarto.impl.export. to io.vertigo.quarto.impl.export." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.quarto.impl.export." value="io.vertigo.quarto.impl.export." summary="true">
			<include name="**/*.xml" />
		</replace>
		<echo message="Replace in *.xml io.vertigo.quarto.plugins.export. to io.vertigo.quarto.plugins.export." />
		<replace dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.quarto.plugins.export." value="io.vertigo.quarto.plugins.export." summary="true">
			<include name="**/*.xml" />
		</replace>


	</target>

	<target name="0.9.1 to 0.9.2" description="Usefull renames from 0.9.1 to 0.9.2">
		<echo message="Renamed in *.java : Option.some( to Option.of(" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="Option.some(" value="Option.of(">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : Option.option( to Option.ofNullable(" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="Option.option(" value="Option.ofNullable(">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : .isDefined() to .isPresent()" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token=".isDefined()" value=".isPresent()">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : .getOrElse( to .orElse(" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token=".getOrElse(" value=".orElse(">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : .none() to .empty()" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token=".none()" value=".empty()">
			<include name="**/*.java" />
		</replace>
		<!-- Can't do that too many false positive 
        <echo message="Replace in *.java opt.isEmpty() to !opt.isPresent()" />
        <replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
            <fileset dir="${src.path}">
                <include name="**/*.java"/>
            </fileset>
            <regexp pattern="([a-z][a-zA-Z]+)\.isEmpty\(\)" />
                <substitution expression="!\1.isPresent()" />
        </replaceregexp> -->
		<!-- get() to read() for FileStore only, not DAO
		<echo message="Renamed in *.java : DAO.get( to DAO.read(" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="DAO.get(" value="DAO.read(">
			<include name="**/*.java" />
		</replace> -->
		<echo message="Renamed in *.java : DAO.getList( to DAO.findAll(" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="DAO.getList(" value="DAO.findAll(">
			<include name="**/*.java" />
		</replace>
	</target>

	<target name="0.9.0 to 0.9.1" description="Usefull renames from 0.9.0 to 0.9.1">
		<echo message="Renamed in *.java : getFileStore().get( to getFileStore().read(" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="getFileStore().get(" value="getFileStore().read(">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.xml : .event.EventManagerImpl to .eventbus.EventBusManagerImpl" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token=".event.EventManagerImpl" value=".eventbus.EventManagerImpl">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>
		<echo message="Renamed in *.xml : EventManager to EventBusManager" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="EventManager" value="EventBusManager">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>
	</target>


	<target name="0.8.3 to 0.9.0" description="Usefull renames from 0.8.3 to 0.9.0">
		<!-- <echo message="Renamed in LocalManager in boot : LocalManager to <boot local=\'<boot>\'" />
                <replace summary="true" dir="${src.path}" encoding="${src.encoding}"
                    token="io.vertigo.dynamox.search.DefaultListFilterBuilder" value="io.vertigo.dynamox.search.DslListFilterBuilder">
                    <include name="**/*.xml"/>
                    <exclude name="update-renaming-tool.xml"/>
                </replace>
                -->
		<echo message="Renamed in *.xml : io.vertigo.commons.plugins.resource.java.ClassPathResourceResolverPlugin to io.vertigo.core.plugins.resource.classpath.ClassPathResourceResolverPlugin" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.commons.plugins.resource.java.ClassPathResourceResolverPlugin" value="io.vertigo.core.plugins.resource.classpath.ClassPathResourceResolverPlugin">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>
		<echo message="Renamed in *.xml : io.vertigo.commons.plugins.resource.url.URLResourceResolverPlugin to io.vertigo.core.plugins.resource.url.URLResourceResolverPlugin" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.commons.plugins.resource.url.URLResourceResolverPlugin" value="io.vertigo.core.plugins.resource.url.URLResourceResolverPlugin">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>
		<echo message="Renamed in *.xml : io.vertigo.core.plugins.config.xml.XmlConfigPlugin to io.vertigo.core.plugins.param.xml.XmlParamPlugin" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.plugins.config.xml.XmlConfigPlugin" value="io.vertigo.core.plugins.param.xml.XmlParamPlugin">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.xml : &lt;property to &lt;param" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="&lt;property " value="&lt;param ">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>
		<!-- Can't replace because of too many false positives 
            <echo message="Renamed in *.xml : &lt;/property to &lt;/param" />
            <replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="&lt;/property" value="&lt;/param">
                <include name="**/*.xml" />
                <exclude name="update-renaming-tool.xml" />
            </replace>
            -->
		<echo message="Renamed in *.xml : &lt;config to &lt;path" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="&lt;config " value="&lt;path ">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>
		<!-- Can't replace because of too many false positives 
            <echo message="Renamed in *.xml : &lt;/config to &lt;/path" />
            <replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="&lt;/config" value="&lt;/path">
                <include name="**/*.xml" />
                <exclude name="update-renaming-tool.xml" />
            </replace -->

		<echo message="Renamed in *.xml : &lt;application-config to &lt;config" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="&lt;application-config" value="&lt;config">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.xml : &lt;/application-config to &lt;/config" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="&lt;/application-config" value="&lt;/config">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.java : io.vertigo.core.Home to io.vertigo.app.Home" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.Home" value="io.vertigo.app.Home">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.core.App and AppListener to io.vertigo.app.App" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.App" value="io.vertigo.app.App">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.core.Boot to io.vertigo.app.Boot" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.Boot" value="io.vertigo.app.Boot">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : io.vertigo.core.config. to io.vertigo.app.config." />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.core.config." value="io.vertigo.app.config.">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : Home.getComponentSpace() to Home.getApp().getComponentSpace()" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="Home.getComponentSpace()" value="Home.getApp().getComponentSpace()">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : Home.getDefinitionSpace() to Home.getApp().getDefinitionSpace()" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="Home.getDefinitionSpace()" value="Home.getApp().getDefinitionSpace()">
			<include name="**/*.java" />
		</replace>
		<echo message="Renamed in *.java : ConfigManager to ParamManager" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="ConfigManager" value="ParamManager">
			<include name="**/*.java" />
		</replace>

	</target>

	<target name="0.8.2 to 0.8.3" description="Usefull renames from 0.8.2 to 0.8.3">
		<echo message="Renamed in *.ksp : io.vertigo.dynamox.search.DslListFilterBuilderDefaultListFilterBuilder to io.vertigo.dynamox.search.DslListFilterBuilderDslListFilterBuilder" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamox.search.DefaultListFilterBuilder" value="io.vertigo.dynamox.search.DslListFilterBuilder">
			<include name="**/*.ksp" />
		</replace>

		<echo message="Renamed in pom.xml : &lt;vertigo.version&gt;0.8.2&lt;/vertigo.version&gt; to &lt;vertigo.version&gt;0.8.3&lt;/vertigo.version&gt;" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="&lt;vertigo.version&gt;0.8.2&lt;/vertigo.version&gt;" value="&lt;vertigo.version&gt;0.8.3&lt;/vertigo.version&gt;">
			<include name="**/pom.xml" />
		</replace>
	</target>

	<target name="0.8.1 to 0.8.2 (task)" description="Usefull renames from 0.8.1 to 0.8.2 (task attributes)">
		<echo message="Renamed in *.ksp : attribute .... inOut:'in' to in ..." />
		<replaceregexp encoding="${src.encoding}" flags="gi" byline="true">
			<fileset dir="${src.path}">
				<include name="**/*.ksp" />
			</fileset>
			<regexp pattern="attribute(\s+.*\s+)inOut\s*:\s*&quot;(in|out)&quot;\s*,?" />
			<substitution expression="\2\1" />
		</replaceregexp>
	</target>

	<target name="0.8.1 to 0.8.2" description="Usefull renames from 0.8.1 to 0.8.2">
		<echo message="Renamed in *.xml : io.vertigo.vega.rest.* to io.vertigo.vega.webservice.*" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.vega.rest." value="io.vertigo.vega.webservice.">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in pom.xml : &lt;vertigo.version&gt;0.8.1&lt;/vertigo.version&gt; to &lt;vertigo.version&gt;0.8.2&lt;/vertigo.version&gt;" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="&lt;vertigo.version&gt;0.8.1&lt;/vertigo.version&gt;" value="&lt;vertigo.version&gt;0.8.2&lt;/vertigo.version&gt;">
			<include name="**/pom.xml" />
		</replace>


		<echo message="Renamed in *.java : import io.vertigo.vega.rest.* to io.vertigo.vega.webservice.*" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="import io.vertigo.vega.rest." value="import io.vertigo.vega.webservice.">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : &quot;vertigo.rest.Session&quot; to &quot;vertigo.webservice.Session&quot;" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="&quot;vertigo.rest.Session&quot;" value="&quot;vertigo.webservice.Session&quot;">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.xml : io.vertigo.vega.impl.rest.RestManagerImpl to io.vertigo.vega.impl.webservice.WebServiceManagerImpl" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.vega.impl.rest.RestManagerImpl" value="io.vertigo.vega.impl.webservice.WebServiceManagerImpl">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.xml : RestManager to WebServiceManager" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="RestManager" value="WebServiceManager">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.java : extends DefaultSearchLoader to extends AbstractSqlSearchLoader" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="extends DefaultSearchLoader" value="extends AbstractSqlSearchLoader">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : extends .getFileInfo( to extends .get(" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token=".getFileInfo(" value=".get(">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : .deleteFileInfo( to extends .delete(" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token=".deleteFileInfo(" value=".delete(">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : getBrokerConfig() to extends getDataStoreConfig()" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="getBrokerConfig()" value="getDataStoreConfig()">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : extends DefaultSearchLoader to extends AbstractSqlSearchLoader" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.dynamox.search.DefaultSearchLoader" value="io.vertigo.dynamox.search.AbstractSqlSearchLoader">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.xml : io.vertigo.vega.plugins.rest.instrospector.annotations.AnnotationsEndPointIntrospectorPlugin to io.vertigo.vega.plugins.webservice.instrospector.annotations.AnnotationsWebServiceIntrospectorPlugin" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.vega.plugins.rest.instrospector.annotations.AnnotationsEndPointIntrospectorPlugin" value="io.vertigo.vega.plugins.webservice.instrospector.annotations.AnnotationsWebServiceIntrospectorPlugin">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.xml : io.vertigo.vega.plugins.webservice.webserver.sparkjava.SparkJavaServletFilterWebServerPlugin to io.vertigo.vega.plugins.webservice.webserver.sparkjava.SparkJavaServletFilterWebServerPlugin" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.vega.plugins.rest.routesregister.sparkjava.SparkJavaRoutesRegisterPlugin" value="io.vertigo.vega.plugins.webservice.webserver.sparkjava.SparkJavaServletFilterWebServerPlugin">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.xml : io.vertigo.vega.rest.engine.GoogleJsonEngine to io.vertigo.vega.engines.webservice.json.GoogleJsonEngine" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.vega.rest.engine.GoogleJsonEngine" value="io.vertigo.vega.engines.webservice.json.GoogleJsonEngine">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.xml : SwaggerWebServices to SwaggerWebServices" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="SwaggerRestServices" value="SwaggerWebServices">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.xml : XxxxWebRestHandlerPlugin to XxxxWebServiceHandlerPlugin" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="RestHandlerPlugin" value="WebServiceHandlerPlugin">
			<include name="**/*.xml" />
			<exclude name="update-renaming-tool.xml" />
		</replace>

		<echo message="Renamed in *.java : import io.vertigo.vega.webservice.RestfulService to import io.vertigo.vega.webservice.WebServices" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="import io.vertigo.vega.webservice.RestfulService" value="import io.vertigo.vega.webservice.WebServices">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in *.java : implements RestfulService to implements WebServices" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="implements RestfulService" value="implements WebServices">
			<include name="**/*.java" />
		</replace>

		<echo message="Renamed in web.xml io.vertigo.vega.impl.rest.servlet.ApplicationServletContextListener to io.vertigo.vega.impl.webservice.servlet.AppServletContextListener" />
		<replace summary="true" dir="${src.path}" encoding="${src.encoding}" token="io.vertigo.vega.impl.rest.servlet.ApplicationServletContextListener" value="io.vertigo.vega.impl.webservice.servlet.AppServletContextListener">
			<include name="**/web.xml" />
		</replace>

		<echo message="Replaced in web.xml spark.servlet.SparkFilter and application by a new VegaSparkFilter" />
		<replaceregexp encoding="${src.encoding}" flags="gis" byline="false">
			<fileset dir="${src.path}">
				<include name="**/web.xml" />
			</fileset>

			<regexp pattern="&lt;filter-name&gt;SparkFilter&lt;/filter-name&gt;
([ \t\n]+?)&lt;filter-class&gt;spark.servlet.SparkFilter&lt;/filter-class&gt;
([ \t\n]+?)&lt;init-param&gt;
([ \t\n]+?)&lt;param-name&gt;applicationClass&lt;/param-name&gt;
([ \t\n]+?)&lt;param-value&gt;io.vertigo.vega.plugins.webservice.routesregister.sparkjava.VegaSparkApplication&lt;/param-value&gt;
([ \t\n]+?)&lt;/init-param&gt;&gt;" />
			<substitution expression="&lt;filter&gt;
([ \t\n]+?)&lt;filter-name&gt;SparkFilter&lt;/filter-name&gt;
([ \t\n]+?)&lt;filter-class&gt;io.vertigo.vega.plugins.webservice.webserver.sparkjava.VegaSparkFilter&lt;/filter-class&gt;    
([ \t\n]+?)&lt;/filter&gt;&gt;" />
		</replaceregexp>

	</target>

</project>
